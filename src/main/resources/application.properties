# Application Settings
spring.application.name=lets-ride-backend

# --- JPA / Hibernate Settings ---
# Use 'update' for development with H2 - creates/updates schema based on entities.
# IMPORTANT: For production with PostgreSQL and Flyway/Liquibase later, change this to 'validate' or 'none'.
spring.jpa.hibernate.ddl-auto=update

# Optional: Show SQL statements Hibernate executes in the log (useful for debugging)
spring.jpa.show-sql=true
# Optional: Format the shown SQL statements for better readability
spring.jpa.properties.hibernate.format_sql=true
# Optional: Specify dialect if Hibernate doesn't detect it correctly (usually not needed for H2/Postgres)
# spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# --- H2 Console Settings ---
# Enable the H2 web console for development database inspection
spring.h2.console.enabled=true
# Set the path for the H2 console
spring.h2.console.path=/h2-console

# --- H2 Datasource Configuration (Explicit for Consistency during Dev) ---
# Use a fixed name like 'letsridedb' instead of a dynamic one for the in-memory DB.
# This ensures the H2 console can connect reliably using this JDBC URL.
# These settings will be overridden by environment variables (e.g., SPRING_DATASOURCE_URL from Render)
# or Spring Profiles when connecting to the real PostgreSQL database later.
spring.datasource.url=jdbc:h2:mem:letsridedb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
# Default password for H2 is blank
spring.datasource.password=

# --- Server Port (Optional - Defaults to 8080, which Render usually expects) ---
# server.port=8080